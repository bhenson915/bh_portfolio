/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
@import url("https://fonts.googleapis.com/css?family=Raleway:100,300,400,500,700,900|Seaweed+Script");
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* ========== Variables ==========*/
/* ========== Base Styles ==========*/
body {
  color: #666666;
}

.container {
  width: 100%;
  margin: 0;
}

.wrapper {
  width: 80%;
  margin: 0 auto;
}

.flex-grid {
  display: flex;
  box-sizing: border-box;
  width: 100%;
}

.vertical-center {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
}

.padding {
  padding: 1em 2em;
}

.col {
  flex: 1;
}

.gutter {
  margin: 1em;
  box-sizing: border-box;
}

.gutter-side {
  padding: 0 1em;
}

.row:after {
  display: block;
  clear: both;
  content: '';
}

.row + .row {
  margin-top: 0;
}

[class^="col-"] {
  float: left;
  margin-right: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
[class^="col-"]:last-child {
  margin-right: 0%;
}

/*
.col-1  { width:5.583333333333333%; }
.col-2  { width:14.16666666666667%; }
.col-3  { width:22.75%; }
.col-4  { width:31.33333333333333%; }
.col-5  { width:39.91666666666667%; }
.col-6  { width:48.5%; }
.col-7  { width:57.08333333333333%; }
.col-8  { width:65.66666666666666%; }
.col-9  { width:74.25%; }
.col-10 { width:82.83333333333333%; }
.col-11 { width:91.41666666666666%; }
.col-12 { width:100%; }
*/
.col-1 {
  width: 8.3333333333%;
}

.col-2 {
  width: 16.6666666667%;
}

.col-3 {
  width: 25%;
}

.col-4 {
  width: 33.3333333333%;
}

.col-5 {
  width: 41.6666666667%;
}

.col-6 {
  width: 50%;
}

.col-7 {
  width: 58.3333333333%;
}

.col-8 {
  width: 66.6666666667%;
}

.col-9 {
  width: 75%;
}

.col-10 {
  width: 83.3333333333%;
}

.col-11 {
  width: 91.6666666667%;
}

.col-12 {
  width: 100%;
}

button {
  max-width: 20em;
  padding: .5em 2em;
  background: #5E6472;
  color: #cfb53b;
  border-radius: 5px;
}

p {
  margin-bottom: 1.3em;
}

h1, h2, h3, h4 {
  font-family: 'Raleway', Arial, sans-serif;
  font-weight: 400;
  line-height: 1;
  margin: .25em 0;
}

h1 {
  font-size: 3.157em;
}

h2 {
  font-size: 2.369em;
}

h3 {
  font-size: 1.777em;
}

h4 {
  font-size: 1.333em;
}

small, .font_small {
  font-size: 0.75em;
}

.h1, .h2, .h3, .h4 {
  font-weight: 700;
}

.h1 {
  font-size: 4em;
}

.h2 {
  font-size: 3em;
}

.h3 {
  font-size: 2em;
}

.h4 {
  font-size: 1.25em;
}

.script {
  font-family: 'Seaweed Script', cursive;
}

/*********************
VARIABLES
**********************/
/*Controls Menu top & bottom padding*/
/*Contols Menu left & right padding*/
/*Control Menu Color Scheme*/
/*********************
RESPONSIVE BREAKPOINTS
**********************/
/*********************
NAVIGATION STYLES
**********************/
.side-nav {
  display: flex;
  flex-direction: column;
  color: white;
  text-align: center;
  align-content: space-around;
  justify-content: center;
}
.side-nav a {
  color: white;
  text-decoration: none;
}

.links {
  display: flex;
  flex-direction: column;
}

.brand a {
  color: #ffffff;
  text-decoration: none;
}
.brand a:hover {
  color: #cfb53b;
}

nav {
  width: 100%;
  background: transparent;
  position: absolute;
  top: 0;
}
@media (max-width: 715px) {
  nav {
    margin: 65px 0 0 0;
    max-height: 0;
    overflow: hidden;
    transition: all 0.5s ease;
    background: #191919;
  }
}

nav ul {
  margin: 0 auto;
  list-style: none;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
@media (max-width: 715px) {
  nav ul {
    margin: 0;
    padding: 0;
    width: 100%;
    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.7);
    z-index: 15;
  }
}
nav ul li {
  float: left;
  position: relative;
  z-index: 1;
  /******************
  SUBNAV
  ******************/
}
@media (max-width: 715px) {
  nav ul li {
    float: none;
    position: relative;
    margin: 0;
  }
}
nav ul li a {
  display: block;
  padding: 20px 25px;
  text-align: center;
  color: #ffffff;
  text-decoration: none;
  border-right: 1px solid rgba(0, 0, 0, 0);
  transition: all 0.1s ease;
}
nav ul li a:hover {
  background: rgba(0, 0, 0, 0);
  color: #cfb53b;
  transition: all 0.2s ease;
}
@media (max-width: 715px) {
  nav ul li a {
    display: table;
    margin: 0;
    padding: 15px 2px;
    color: white;
    border-top: 1px solid rgba(0, 0, 0, 0.15);
    box-shadow: inset 0px 1px 3px rgba(255, 255, 255, 0.03);
    text-shadow: none;
    width: 100%;
  }
}
nav ul li:hover ul {
  opacity: 1;
  max-height: 1000px;
  transition: all 0.3s ease;
}
@media (max-width: 715px) {
  nav ul li:hover ul {
    max-height: 0;
  }
}
nav ul li ul {
  background: rgba(0, 0, 0, 0);
  list-style: none;
  padding: 0;
  position: absolute;
  width: 200px;
  max-height: 0;
  z-index: 0;
  opacity: 0;
  overflow: hidden;
  font-size: .9em;
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.5);
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
}
@media (max-width: 715px) {
  nav ul li ul {
    max-height: 0;
    opacity: 1;
    width: 100%;
    position: relative;
    overflow: hidden;
    box-shadow: inset 0px 2px 2px rgba(0, 0, 0, 0.5);
    transition: all 2s ease;
  }
}
nav ul li ul li {
  float: none;
  margin: 0;
}
@media (max-width: 715px) {
  nav ul li ul li {
    margin: 0;
  }
}
nav ul li ul li a {
  display: block;
  text-align: left;
  padding: 13.3333333333px;
  margin: 0;
  border-right: none;
  border-top: 1px solid rgba(0, 0, 0, 0);
  box-shadow: inset 0px 1px 3px rgba(255, 255, 255, 0.03);
  text-transform: none;
  text-shadow: none;
  transition: all 0.2s ease;
}
nav ul li ul li a:hover {
  color: #cfb53b;
  background: rgba(13, 13, 13, 0);
  transition: all 0.5s ease;
}
@media (max-width: 715px) {
  nav ul li ul li a {
    color: white;
    padding-left: 20px;
    background: none;
  }
}

/***************************
MOBILE NAV STYLES
***************************/
.mobile {
  display: none;
  margin: 0;
  padding: 20px 15px;
  background: linear-gradient(to bottom, #353535 0%, #262626 100%);
  position: absolute;
  color: white;
  text-decoration: none;
  top: 15px;
  right: 15px;
  line-height: 0;
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.35);
}
@media (max-width: 715px) {
  .mobile {
    display: table;
  }
}

.active {
  max-height: 9000px !important;
  transition: all 1s ease;
}

@media (max-width: 715px) {
  .arrow {
    display: block;
    background: url(../images/arrow.png) no-repeat;
    float: right;
    height: 30px;
    width: 30px;
    position: absolute;
    right: 25px;
    top: 10px;
    transition: all 0.3s ease;
  }
  .arrow:hover {
    cursor: pointer;
  }

  .rotate {
    transition: all 0.3s ease;
    -webkit-transform: rotate(-180deg);
    -moz-transform: rotate(-180deg);
    -o-transform: rotate(-180deg);
    transform: rotate(-180deg);
  }
}
.hero-container {
  height: 100vh;
  background: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)), url("../img/hero1.jpg");
  background-size: cover;
  background-position: center;
  display: flex;
  justify-content: space-around;
  align-content: center;
  align-items: center;
}

.hero-content {
  display: flex;
  width: 80%;
}

.hero-title {
  text-align: center;
  color: #cfb53b;
}

#gradient {
  background: -webkit-linear-gradient(#666666, #cfb53b);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.center img {
  width: 300px;
  height: auto;
}

.slider-nav img {
  width: 50px;
  height: auto;
}



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
